% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/button-radio.R
\name{radioSwitchButtons}
\alias{radioSwitchButtons}
\alias{updateRadioSwitchButtons}
\alias{radioSwitchButtons_default_style}
\alias{radioSwitchButtonsDemo}
\title{Radio Switch Buttons}
\usage{
radioSwitchButtons(inputId, label = NULL, choices,
  choice_labels = names(choices) \%||\% choices, selected = choices[1],
  selected_background = NULL, selected_color = NULL,
  not_selected_background = NULL, not_selected_color = NULL)

updateRadioSwitchButtons(inputId, selected = NULL,
  session = shiny::getDefaultReactiveDomain())

radioSwitchButtons_default_style(selected_background = NULL,
  selected_color = NULL, not_selected_background = NULL,
  not_selected_color = NULL)

radioSwitchButtonsDemo(display.mode = c("showcase", "normal", "auto"))
}
\arguments{
\item{inputId}{The input id}

\item{label}{The text to appear above the buttons (set to \code{NULL} for no
label.)}

\item{choices}{A vector of choices for the button group. The names will be
used for button labels and the value are returned by the input. If an
unnamed vector is provided, the button labels and values returned will be
the same.}

\item{choice_labels}{A list of labels for the choices that can be arbitrary
HTML if wrapped in \code{HTML()}. Set to \code{""} or \code{NULL} for no label.}

\item{selected}{The value that should be active initially.}

\item{selected_background}{Background color of the label when selected. Can
be set globally via \code{\link[=radioSwitchButtons_default_style]{radioSwitchButtons_default_style()}}. Default value is
\code{"#007BFF"}.}

\item{selected_color}{Text color of the label text when selected. Can be set
globally via \code{\link[=radioSwitchButtons_default_style]{radioSwitchButtons_default_style()}}. Default value is
\code{"#FFFFFF"}.}

\item{not_selected_background}{Background color of the label when not
selected. Can be set globally via \code{\link[=radioSwitchButtons_default_style]{radioSwitchButtons_default_style()}}.
Default value is \code{"#FFFFFF"}.}

\item{not_selected_color}{Text color of the label text when not selected. Can
be set globally via \code{\link[=radioSwitchButtons_default_style]{radioSwitchButtons_default_style()}}. Default value is
\code{"#AAAAAA"}.}

\item{session}{The \code{session} object passed to function given to \code{shinyServer}.}

\item{display.mode}{The mode in which to display the application. If set to
the value \code{"showcase"}, shows application code and metadata from a
\code{DESCRIPTION} file in the application directory alongside the
application. If set to \code{"normal"}, displays the application normally.
Defaults to \code{"auto"}, which displays the application in the mode given
in its \code{DESCRIPTION} file, if any.}
}
\description{
This input creates a radio switch that works like \code{\link[shiny:radioButtons]{shiny::radioButtons()}}
with the appearance of a button
}
\section{Functions}{
\itemize{
\item \code{updateRadioSwitchButtons}: Update the selected value of the radio switch
button input associated with \code{inputId}.

\item \code{radioSwitchButtons_default_style}: Set default values for the radio switch
buttons.

\item \code{radioSwitchButtonsDemo}: Example app demonstrating the usage of the
radioSwitchButtons input.
}}

\examples{
if (interactive()) {
library(shiny)
library(shinyThings)

ui <- fluidPage(
  inputPanel(
    radioSwitchButtons(
      inputId = "other",
      label = "Yes or No?",
      choices = c("Yes" = "yes", "No" = "no", "Maybe?" = "maybe"),
      selected_background = "#eb1455"
    ),

    radioSwitchButtons(
      inputId = "small",
      label = "Style",
      choices = c("plain", "bold", "italic"),
      choice_labels = list(
        tags$span(style = "font-weight: normal", "P"),
        tags$strong("B"),
        tags$em("I")
      )
    )
  ),
  verbatimTextOutput("values")
)

server <- function(input, output, session) {
  output$values <- renderPrint({
    str(list(
      moreThanTwo = input$other,
      style       = input$small
    ))
  })
}

shinyApp(ui, server)
}

}
\references{
Adapted from CSS code by Mike Hemberger described in
\url{https://thestizmedia.com/radio-buttons-as-toggle-buttons-with-css/}.
}
